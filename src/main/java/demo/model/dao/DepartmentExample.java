package demo.model.dao;

import java.util.ArrayList;
import java.util.List;

public class DepartmentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public DepartmentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDEPTNOIsNull() {
            addCriterion("DEPTNO is null");
            return (Criteria) this;
        }

        public Criteria andDEPTNOIsNotNull() {
            addCriterion("DEPTNO is not null");
            return (Criteria) this;
        }

        public Criteria andDEPTNOEqualTo(Short value) {
            addCriterion("DEPTNO =", value, "DEPTNO");
            return (Criteria) this;
        }

        public Criteria andDEPTNONotEqualTo(Short value) {
            addCriterion("DEPTNO <>", value, "DEPTNO");
            return (Criteria) this;
        }

        public Criteria andDEPTNOGreaterThan(Short value) {
            addCriterion("DEPTNO >", value, "DEPTNO");
            return (Criteria) this;
        }

        public Criteria andDEPTNOGreaterThanOrEqualTo(Short value) {
            addCriterion("DEPTNO >=", value, "DEPTNO");
            return (Criteria) this;
        }

        public Criteria andDEPTNOLessThan(Short value) {
            addCriterion("DEPTNO <", value, "DEPTNO");
            return (Criteria) this;
        }

        public Criteria andDEPTNOLessThanOrEqualTo(Short value) {
            addCriterion("DEPTNO <=", value, "DEPTNO");
            return (Criteria) this;
        }

        public Criteria andDEPTNOIn(List<Short> values) {
            addCriterion("DEPTNO in", values, "DEPTNO");
            return (Criteria) this;
        }

        public Criteria andDEPTNONotIn(List<Short> values) {
            addCriterion("DEPTNO not in", values, "DEPTNO");
            return (Criteria) this;
        }

        public Criteria andDEPTNOBetween(Short value1, Short value2) {
            addCriterion("DEPTNO between", value1, value2, "DEPTNO");
            return (Criteria) this;
        }

        public Criteria andDEPTNONotBetween(Short value1, Short value2) {
            addCriterion("DEPTNO not between", value1, value2, "DEPTNO");
            return (Criteria) this;
        }

        public Criteria andDNAMEIsNull() {
            addCriterion("DNAME is null");
            return (Criteria) this;
        }

        public Criteria andDNAMEIsNotNull() {
            addCriterion("DNAME is not null");
            return (Criteria) this;
        }

        public Criteria andDNAMEEqualTo(String value) {
            addCriterion("DNAME =", value, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMENotEqualTo(String value) {
            addCriterion("DNAME <>", value, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMEGreaterThan(String value) {
            addCriterion("DNAME >", value, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMEGreaterThanOrEqualTo(String value) {
            addCriterion("DNAME >=", value, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMELessThan(String value) {
            addCriterion("DNAME <", value, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMELessThanOrEqualTo(String value) {
            addCriterion("DNAME <=", value, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMELike(String value) {
            addCriterion("DNAME like", value, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMENotLike(String value) {
            addCriterion("DNAME not like", value, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMEIn(List<String> values) {
            addCriterion("DNAME in", values, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMENotIn(List<String> values) {
            addCriterion("DNAME not in", values, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMEBetween(String value1, String value2) {
            addCriterion("DNAME between", value1, value2, "DNAME");
            return (Criteria) this;
        }

        public Criteria andDNAMENotBetween(String value1, String value2) {
            addCriterion("DNAME not between", value1, value2, "DNAME");
            return (Criteria) this;
        }

        public Criteria andLOCIsNull() {
            addCriterion("LOC is null");
            return (Criteria) this;
        }

        public Criteria andLOCIsNotNull() {
            addCriterion("LOC is not null");
            return (Criteria) this;
        }

        public Criteria andLOCEqualTo(String value) {
            addCriterion("LOC =", value, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCNotEqualTo(String value) {
            addCriterion("LOC <>", value, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCGreaterThan(String value) {
            addCriterion("LOC >", value, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCGreaterThanOrEqualTo(String value) {
            addCriterion("LOC >=", value, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCLessThan(String value) {
            addCriterion("LOC <", value, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCLessThanOrEqualTo(String value) {
            addCriterion("LOC <=", value, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCLike(String value) {
            addCriterion("LOC like", value, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCNotLike(String value) {
            addCriterion("LOC not like", value, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCIn(List<String> values) {
            addCriterion("LOC in", values, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCNotIn(List<String> values) {
            addCriterion("LOC not in", values, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCBetween(String value1, String value2) {
            addCriterion("LOC between", value1, value2, "LOC");
            return (Criteria) this;
        }

        public Criteria andLOCNotBetween(String value1, String value2) {
            addCriterion("LOC not between", value1, value2, "LOC");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated do_not_delete_during_merge Mon Nov 06 13:15:56 GMT 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DBUSER.DEPT
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}