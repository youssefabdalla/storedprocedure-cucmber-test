package demo.model.dao;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class OrdersExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public OrdersExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andORDER_IDIsNull() {
            addCriterion("ORDER_ID is null");
            return (Criteria) this;
        }

        public Criteria andORDER_IDIsNotNull() {
            addCriterion("ORDER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andORDER_IDEqualTo(Short value) {
            addCriterion("ORDER_ID =", value, "ORDER_ID");
            return (Criteria) this;
        }

        public Criteria andORDER_IDNotEqualTo(Short value) {
            addCriterion("ORDER_ID <>", value, "ORDER_ID");
            return (Criteria) this;
        }

        public Criteria andORDER_IDGreaterThan(Short value) {
            addCriterion("ORDER_ID >", value, "ORDER_ID");
            return (Criteria) this;
        }

        public Criteria andORDER_IDGreaterThanOrEqualTo(Short value) {
            addCriterion("ORDER_ID >=", value, "ORDER_ID");
            return (Criteria) this;
        }

        public Criteria andORDER_IDLessThan(Short value) {
            addCriterion("ORDER_ID <", value, "ORDER_ID");
            return (Criteria) this;
        }

        public Criteria andORDER_IDLessThanOrEqualTo(Short value) {
            addCriterion("ORDER_ID <=", value, "ORDER_ID");
            return (Criteria) this;
        }

        public Criteria andORDER_IDIn(List<Short> values) {
            addCriterion("ORDER_ID in", values, "ORDER_ID");
            return (Criteria) this;
        }

        public Criteria andORDER_IDNotIn(List<Short> values) {
            addCriterion("ORDER_ID not in", values, "ORDER_ID");
            return (Criteria) this;
        }

        public Criteria andORDER_IDBetween(Short value1, Short value2) {
            addCriterion("ORDER_ID between", value1, value2, "ORDER_ID");
            return (Criteria) this;
        }

        public Criteria andORDER_IDNotBetween(Short value1, Short value2) {
            addCriterion("ORDER_ID not between", value1, value2, "ORDER_ID");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDIsNull() {
            addCriterion("CUSTOMER_ID is null");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDIsNotNull() {
            addCriterion("CUSTOMER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDEqualTo(Short value) {
            addCriterion("CUSTOMER_ID =", value, "CUSTOMER_ID");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDNotEqualTo(Short value) {
            addCriterion("CUSTOMER_ID <>", value, "CUSTOMER_ID");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDGreaterThan(Short value) {
            addCriterion("CUSTOMER_ID >", value, "CUSTOMER_ID");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDGreaterThanOrEqualTo(Short value) {
            addCriterion("CUSTOMER_ID >=", value, "CUSTOMER_ID");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDLessThan(Short value) {
            addCriterion("CUSTOMER_ID <", value, "CUSTOMER_ID");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDLessThanOrEqualTo(Short value) {
            addCriterion("CUSTOMER_ID <=", value, "CUSTOMER_ID");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDIn(List<Short> values) {
            addCriterion("CUSTOMER_ID in", values, "CUSTOMER_ID");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDNotIn(List<Short> values) {
            addCriterion("CUSTOMER_ID not in", values, "CUSTOMER_ID");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDBetween(Short value1, Short value2) {
            addCriterion("CUSTOMER_ID between", value1, value2, "CUSTOMER_ID");
            return (Criteria) this;
        }

        public Criteria andCUSTOMER_IDNotBetween(Short value1, Short value2) {
            addCriterion("CUSTOMER_ID not between", value1, value2, "CUSTOMER_ID");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALIsNull() {
            addCriterion("ORDER_TOTAL is null");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALIsNotNull() {
            addCriterion("ORDER_TOTAL is not null");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALEqualTo(BigDecimal value) {
            addCriterion("ORDER_TOTAL =", value, "ORDER_TOTAL");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALNotEqualTo(BigDecimal value) {
            addCriterion("ORDER_TOTAL <>", value, "ORDER_TOTAL");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALGreaterThan(BigDecimal value) {
            addCriterion("ORDER_TOTAL >", value, "ORDER_TOTAL");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ORDER_TOTAL >=", value, "ORDER_TOTAL");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALLessThan(BigDecimal value) {
            addCriterion("ORDER_TOTAL <", value, "ORDER_TOTAL");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ORDER_TOTAL <=", value, "ORDER_TOTAL");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALIn(List<BigDecimal> values) {
            addCriterion("ORDER_TOTAL in", values, "ORDER_TOTAL");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALNotIn(List<BigDecimal> values) {
            addCriterion("ORDER_TOTAL not in", values, "ORDER_TOTAL");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ORDER_TOTAL between", value1, value2, "ORDER_TOTAL");
            return (Criteria) this;
        }

        public Criteria andORDER_TOTALNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ORDER_TOTAL not between", value1, value2, "ORDER_TOTAL");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPIsNull() {
            addCriterion("ORDER_TIMESTAMP is null");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPIsNotNull() {
            addCriterion("ORDER_TIMESTAMP is not null");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPEqualTo(Date value) {
            addCriterion("ORDER_TIMESTAMP =", value, "ORDER_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPNotEqualTo(Date value) {
            addCriterion("ORDER_TIMESTAMP <>", value, "ORDER_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPGreaterThan(Date value) {
            addCriterion("ORDER_TIMESTAMP >", value, "ORDER_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPGreaterThanOrEqualTo(Date value) {
            addCriterion("ORDER_TIMESTAMP >=", value, "ORDER_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPLessThan(Date value) {
            addCriterion("ORDER_TIMESTAMP <", value, "ORDER_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPLessThanOrEqualTo(Date value) {
            addCriterion("ORDER_TIMESTAMP <=", value, "ORDER_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPIn(List<Date> values) {
            addCriterion("ORDER_TIMESTAMP in", values, "ORDER_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPNotIn(List<Date> values) {
            addCriterion("ORDER_TIMESTAMP not in", values, "ORDER_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPBetween(Date value1, Date value2) {
            addCriterion("ORDER_TIMESTAMP between", value1, value2, "ORDER_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andORDER_TIMESTAMPNotBetween(Date value1, Date value2) {
            addCriterion("ORDER_TIMESTAMP not between", value1, value2, "ORDER_TIMESTAMP");
            return (Criteria) this;
        }

        public Criteria andUSER_IDIsNull() {
            addCriterion("USER_ID is null");
            return (Criteria) this;
        }

        public Criteria andUSER_IDIsNotNull() {
            addCriterion("USER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUSER_IDEqualTo(Short value) {
            addCriterion("USER_ID =", value, "USER_ID");
            return (Criteria) this;
        }

        public Criteria andUSER_IDNotEqualTo(Short value) {
            addCriterion("USER_ID <>", value, "USER_ID");
            return (Criteria) this;
        }

        public Criteria andUSER_IDGreaterThan(Short value) {
            addCriterion("USER_ID >", value, "USER_ID");
            return (Criteria) this;
        }

        public Criteria andUSER_IDGreaterThanOrEqualTo(Short value) {
            addCriterion("USER_ID >=", value, "USER_ID");
            return (Criteria) this;
        }

        public Criteria andUSER_IDLessThan(Short value) {
            addCriterion("USER_ID <", value, "USER_ID");
            return (Criteria) this;
        }

        public Criteria andUSER_IDLessThanOrEqualTo(Short value) {
            addCriterion("USER_ID <=", value, "USER_ID");
            return (Criteria) this;
        }

        public Criteria andUSER_IDIn(List<Short> values) {
            addCriterion("USER_ID in", values, "USER_ID");
            return (Criteria) this;
        }

        public Criteria andUSER_IDNotIn(List<Short> values) {
            addCriterion("USER_ID not in", values, "USER_ID");
            return (Criteria) this;
        }

        public Criteria andUSER_IDBetween(Short value1, Short value2) {
            addCriterion("USER_ID between", value1, value2, "USER_ID");
            return (Criteria) this;
        }

        public Criteria andUSER_IDNotBetween(Short value1, Short value2) {
            addCriterion("USER_ID not between", value1, value2, "USER_ID");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated do_not_delete_during_merge Mon Nov 06 13:15:56 GMT 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DBUSER.DEMO_ORDERS
     *
     * @mbg.generated Mon Nov 06 13:15:56 GMT 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}